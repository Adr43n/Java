import java.util.Arrays;
import java.util.Comparator;
import java.util.List;
import java.util.stream.Stream;

public class ApplicationRectangle {

    public static void main(String[] args) {
        // créer une liste de 12 rectangles
        List<Rectangle> liste = Arrays.asList(new Rectangle(3, 4),
            new Rectangle(120, 310), new Rectangle(10, 20),
            new Rectangle(11, 30), new Rectangle(2, 1), new Rectangle(10, 20),
            new Rectangle(500, 10), new Rectangle(23, 12), new Rectangle(5, 5),
            new Rectangle(12, 40), new Rectangle(9, 300),
            new Rectangle(10, 20));
        
        List<Integer> surfaces = liste.stream() 
            .map(Rectangle::surface)
            .toList();

        System.out.println("Surfaces rectangles : " + surfaces);
        
        List<Integer> surfacesTriées = liste.stream() 
            .map(Rectangle::surface)
            .sorted()
            .toList();

        System.out.println("Surfaces triées rectangles : " + surfacesTriées);
        
        List<Integer> surfaces200 = liste.stream() 
            .map(Rectangle::surface)
            .filter(s -> s >200)
            .toList();
            
        System.out.println("Surfaces > 200 rectangles : " + surfaces200);
        
        List<Integer> surfaces200triées = liste.stream() 
            .map(Rectangle::surface)
            .filter(s -> s >200)
            .sorted(Comparator.reverseOrder())
            .toList();
            
        System.out.println("Surfaces > 200 et triées par ordre décroissant rectangles : " + surfaces200triées);
        
        liste.stream()
        .filter(r -> r.getLongueur() > 20)                   // filtrer sur l'attribut public
        .sorted(Comparator.comparing(Rectangle::surface)) // trier par surface croissante
        .forEach(r -> System.out.println(r));           // afficher directement chaque rectangle
        
        List<Rectangle> mmlargeurlongueur2 = liste.stream()
            .map(r -> new Rectangle(r.getLongueur()*2, r.getLargeur()))
            .toList();
        System.out.println("mmlargeurlongueur2 : " + mmlargeurlongueur2);
        
        List<Rectangle> premier3rectangles = liste.stream()
            .map(r -> new Rectangle(r.getLongueur()*2, r.getLargeur()))
            .limit(3)
            .toList();
        System.out.println("premier3rectangles : " + premier3rectangles);
        
        long nbtriangle = liste.stream()
            .map(r -> r.getLongueur())
            .filter( r -> r > 200)
            .count();
        
        System.out.println("nbtriangle : " + nbtriangle);
        
        liste.stream()
            .distinct()
            .forEach(r -> System.out.println(r));
    }

}
